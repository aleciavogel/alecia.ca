/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch'
  background?: string
  foreground?: string
  population?: number
  title?: string
}

export type SanityImagePalette = {
  _type: 'sanity.imagePalette'
  darkMuted?: SanityImagePaletteSwatch
  lightVibrant?: SanityImagePaletteSwatch
  darkVibrant?: SanityImagePaletteSwatch
  vibrant?: SanityImagePaletteSwatch
  dominant?: SanityImagePaletteSwatch
  lightMuted?: SanityImagePaletteSwatch
  muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions'
  height?: number
  width?: number
  aspectRatio?: number
}

export type SanityFileAsset = {
  _id: string
  _type: 'sanity.fileAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  source?: SanityAssetSourceData
}

export type Geopoint = {
  _type: 'geopoint'
  lat?: number
  lng?: number
  alt?: number
}

export type ProjectTag = {
  _id: string
  _type: 'project.tag'
  _createdAt: string
  _updatedAt: string
  _rev: string
  label?: string
  description?: string
  slug?: Slug
}

export type Resource = {
  _type: 'resource'
  label?: string
  url?: string
  content?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  featured?: boolean
  layout?: 'vertical' | 'horizontal'
}

export type ResourceCategory = {
  _id: string
  _type: 'resource.category'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  description?: string
  links?: Array<
    {
      _key: string
    } & Resource
  >
  icon?: IconPicker
}

export type ExperimentTag = {
  _id: string
  _type: 'experiment.tag'
  _createdAt: string
  _updatedAt: string
  _rev: string
  label?: string
  description?: string
  slug?: Slug
}

export type CourseList = {
  _type: 'course-list'
  heading?: string
  intro?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  layout?: 'grid' | 'carousel'
  displayFilters?: boolean
  limit?: number
  filteredCategory?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'course.category'
  }
}

export type CourseCategory = {
  _id: string
  _type: 'course.category'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  description?: string
  slug?: Slug
  icon?: IconPicker
}

export type BlogFrontpage = {
  _type: 'blog-frontpage'
  mainPost?: 'recent' | 'featured'
  showFeaturedPostsFirst?: boolean
}

export type BlogList = {
  _type: 'blog-list'
  heading?: string
  intro?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  layout?: 'grid' | 'carousel'
  displayFilters?: boolean
  limit?: number
  filteredCategory?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'blog.category'
  }
}

export type BlogPostContent = {
  _type: 'blog-post-content'
  uid?: string
}

export type SandpackFile = {
  _type: 'sandpack.file'
  code?: Code
  readOnly?: boolean
  active?: boolean
  hidden?: boolean
}

export type Sandpack = {
  _type: 'sandpack'
  title?: string
  template?:
    | 'react'
    | 'react-ts'
    | 'static'
    | 'solid'
    | 'svelte'
    | 'angular'
    | 'test-ts'
    | 'vanilla'
    | 'vanilla-ts'
    | 'vue'
    | 'vue-ts'
    | 'node'
    | 'nextjs'
    | 'vite'
    | 'vite-react'
    | 'vite-react-ts'
    | 'vite-preact'
    | 'vite-preact-ts'
    | 'vite-vue'
    | 'vite-vue-ts'
    | 'vite-svelte'
    | 'vite-svelte-ts'
    | 'astro'
  files?: Array<
    {
      _key: string
    } & SandpackFile
  >
  dependencies?: Array<{
    name?: string
    version?: string
    _key: string
  }>
  devDependencies?: Array<{
    name?: string
    version?: string
    _key: string
  }>
  options?: {
    showTabs?: boolean
    closeableTabs?: boolean
    showLineNumbers?: boolean
    showInlineErrors?: boolean
    showRunButton?: boolean
    wrapContent?: boolean
    readOnly?: boolean
    showReadOnly?: boolean
    initMode?: 'immediate' | 'lazy' | 'user-visible'
    staticResources?: Array<string>
    showNavigator?: boolean
    layout?: 'console' | 'preview' | 'tests'
    editorHeight?: number
    editorWidthPercentage?: number
    autoRun?: boolean
    autoReload?: boolean
    resizablePanels?: boolean
  }
  showPreview?: boolean
}

export type Cta = {
  _type: 'cta'
  link?: LinkInternal
  style?: 'primary' | 'secondary' | 'outline' | 'destructive' | 'ghost' | 'link'
}

export type Tip = {
  _type: 'tip'
  title?: string
  content?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
}

export type TextRich = {
  _type: 'text.rich'
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        caption?: string
        alt?: string
        source?: string
        loading?: 'lazy' | 'eager'
        _type: 'image'
        _key: string
      }
  >
}

export type TextIntro = {
  _type: 'text.intro'
  leadText?: string
  body?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
}

export type TextCta = {
  _type: 'text.cta'
  layout?: 'left' | 'right'
  pretitle?: string
  title?: string
  body?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  shouldUseLinkIcon?: boolean
  icon?: IconPicker
  link?: LinkInternal
}

export type TestimonialList = {
  _type: 'testimonial-list'
  intro?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  testimonials?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'testimonial'
  }>
  layout?: 'grid' | 'carousel'
}

export type TestimonialFeatured = {
  _type: 'testimonial.featured'
  testimonial?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'testimonial'
  }
}

export type LogoList = {
  _type: 'logo-list'
  pretitle?: string
  intro?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  logos?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'logo'
  }>
  logoType?: 'default' | 'light' | 'dark'
  autoScroll?: boolean
}

export type GalleryPets = {
  _type: 'gallery.pets'
  pretitle?: string
  title?: string
  images?: Array<{
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    name?: string
    alt?: string
    _type: 'image'
    _key: string
  }>
}

export type CustomHtml = {
  _type: 'custom-html'
  uid?: string
  className?: string
  html?: Code
}

export type Callout = {
  _type: 'callout'
  content?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  ctas?: Array<
    {
      _key: string
    } & Cta
  >
}

export type AccordionList = {
  _type: 'accordion-list'
  heading?: string
  intro?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  items?: Array<{
    trigger?: string
    content?: Array<{
      children?: Array<{
        marks?: Array<string>
        text?: string
        _type: 'span'
        _key: string
      }>
      style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
      listItem?: 'bullet' | 'number'
      markDefs?: Array<{
        href?: string
        _type: 'link'
        _key: string
      }>
      level?: number
      _type: 'block'
      _key: string
    }>
    open?: boolean
    _key: string
  }>
  layout?: 'vertical' | 'horizontal'
  uid?: string
}

export type Testimonial = {
  _id: string
  _type: 'testimonial'
  _createdAt: string
  _updatedAt: string
  _rev: string
  content?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  author?: {
    name?: string
    title?: string
    image?: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
  }
}

export type Redirect = {
  _id: string
  _type: 'redirect'
  _createdAt: string
  _updatedAt: string
  _rev: string
  source?: string
  destination?: string
  permanent?: boolean
}

export type NavExplore = {
  _type: 'nav.explore'
  pretitle?: string
  title?: string
  description?: string
  links?: Array<
    {
      _key: string
    } & LinkInternal
  >
}

export type NavAbout = {
  _type: 'nav.about'
  pretitle?: string
  title?: string
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
  links?: Array<
    {
      _key: string
    } & LinkInternal
  >
}

export type Logo = {
  _id: string
  _type: 'logo'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  image?: {
    default?: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
    light?: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
    dark?: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
  }
}

export type Announcement = {
  _id: string
  _type: 'announcement'
  _createdAt: string
  _updatedAt: string
  _rev: string
  content?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  cta?: LinkInternal
  start?: string
  end?: string
}

export type DropdownQuote = {
  _type: 'dropdown.quote'
  label?: string
  author?: string
  quote?: string
  links?: Array<
    {
      _key: string
    } & LinkInternal
  >
}

export type DropdownPromo = {
  _type: 'dropdown.promo'
  label?: string
  subtitle?: string
  links?: Array<
    {
      _key: string
    } & LinkInternal
  >
}

export type DropdownBlog = {
  _type: 'dropdown.blog'
  label?: string
  links?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'blog.category'
  }>
}

export type DropdownAbout = {
  _type: 'dropdown.about'
  label?: string
  name?: string
  subtitle?: string
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  links?: Array<
    {
      _key: string
    } & LinkInternal
  >
}

export type Settings = {
  _id: string
  _type: 'settings'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  announcements?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'announcement'
  }>
  mainMenu?: MenuMain
  secondaryMenu?: Menu
  social?: Array<
    {
      _key: string
    } & LinkSocial
  >
  footerName?: string
  footerBio?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  copyright?: string
  ogimage?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
}

export type Menu = {
  _type: 'menu'
  items?: Array<
    | ({
        _key: string
      } & LinkInternal)
    | ({
        _key: string
      } & LinkExternal)
    | ({
        _key: string
      } & LinkList)
  >
}

export type MenuMain = {
  _type: 'menu.main'
  items?: Array<
    | ({
        _key: string
      } & LinkInternal)
    | ({
        _key: string
      } & DropdownAbout)
    | ({
        _key: string
      } & DropdownBlog)
    | ({
        _key: string
      } & DropdownPromo)
    | ({
        _key: string
      } & DropdownQuote)
  >
}

export type Uid = string

export type LinkSocial = {
  _type: 'link.social'
  label?: string
  url?: string
}

export type LinkInternal = {
  _type: 'link.internal'
  label?: string
  subtitle?: string
  item?:
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'page'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'blog.article'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'blog.category'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'author'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'course'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'course.chapter'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'project'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'experiment'
      }
  params?: string
}

export type Experiment = {
  _id: string
  _type: 'experiment'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  subtitle?: string
  body?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        caption?: string
        alt?: string
        source?: string
        loading?: 'lazy' | 'eager'
        _type: 'image'
        _key: string
      }
    | ({
        _key: string
      } & Sandpack)
    | ({
        _key: string
      } & CustomHtml)
  >
  tags?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'experiment.tag'
  }>
  publishDate?: string
  featured?: boolean
  repoUrl?: string
  metadata?: Metadata
}

export type Project = {
  _id: string
  _type: 'project'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  subtitle?: string
  body?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        caption?: string
        alt?: string
        source?: string
        loading?: 'lazy' | 'eager'
        _type: 'image'
        _key: string
      }
    | ({
        _key: string
      } & Sandpack)
    | ({
        _key: string
      } & CustomHtml)
  >
  tags?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'project.tag'
  }>
  publishDate?: string
  featured?: boolean
  repoUrl?: string
  metadata?: Metadata
}

export type CourseChapter = {
  _id: string
  _type: 'course.chapter'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  subtitle?: string
  video?: MuxVideo
  body?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        caption?: string
        alt?: string
        source?: string
        loading?: 'lazy' | 'eager'
        _type: 'image'
        _key: string
      }
    | ({
        _key: string
      } & Sandpack)
    | ({
        _key: string
      } & CustomHtml)
  >
  publishDate?: string
  hideTableOfContents?: boolean
  repoUrl?: string
  sectionQuiz?: PopQuiz
  nextSectionText?: string
  metadata?: Metadata
}

export type PopQuiz = {
  _type: 'pop-quiz'
  question?: string
  answers?: Array<{
    answer?: string
    correct?: boolean
    _key: string
  }>
  explanation?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
}

export type Course = {
  _id: string
  _type: 'course'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  subtitle?: string
  video?: MuxVideo
  body?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        caption?: string
        alt?: string
        source?: string
        loading?: 'lazy' | 'eager'
        _type: 'image'
        _key: string
      }
    | ({
        _key: string
      } & Code)
    | ({
        _key: string
      } & CustomHtml)
  >
  chapters?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'course.chapter'
  }>
  difficulty?: 'beginner' | 'advanced'
  categories?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'course.category'
  }>
  publishDate?: string
  featured?: boolean
  repoUrl?: string
  metadata?: Metadata
}

export type Author = {
  _id: string
  _type: 'author'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  description?: string
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  socials?: LinkList
  slug?: Slug
}

export type LinkList = {
  _type: 'link.list'
  label?: string
  links?: Array<
    {
      _key: string
    } & LinkInternal
  >
}

export type BlogCategory = {
  _id: string
  _type: 'blog.category'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  description?: string
  slug?: Slug
  icon?: IconPicker
}

export type Slug = {
  _type: 'slug'
  current?: string
  source?: string
}

export type BlogArticle = {
  _id: string
  _type: 'blog.article'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  subtitle?: string
  previewText?: string
  video?: MuxVideo
  mainImage?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
  body?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        caption?: string
        alt?: string
        source?: string
        loading?: 'lazy' | 'eager'
        _type: 'image'
        _key: string
      }
    | ({
        _key: string
      } & Sandpack)
    | ({
        _key: string
      } & CustomHtml)
  >
  authors?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'author'
  }>
  categories?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'blog.category'
  }>
  publishDate?: string
  featured?: boolean
  hideTableOfContents?: boolean
  metadata?: Metadata
}

export type Page = {
  _id: string
  _type: 'page'
  _createdAt: string
  _updatedAt: string
  _rev: string
  icon?: IconPicker
  pretitle?: string
  title?: string
  subtitle?: string
  headerBorder?: 'angled' | 'angled-inverse' | 'rectangular' | 'chevron'
  headerIllustration?:
    | 'none'
    | 'AleciaCouchIllustration'
    | 'AleciaIdeaIllustration'
    | 'AleciaLayingIllustration'
    | 'AleciaSitIllustration'
    | 'AleciaWaveIllustration'
    | 'HammondScienceIllustration'
    | 'HammondSleepingIllustration'
    | 'PhoebeLaptopIllustration'
    | 'PhoebeYarnIllustration'
    | 'SadieAteMyWebsiteIllustration'
    | 'SadieHammondCookiesIllustration'
  headerImage?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
  modules?: Array<
    | ({
        _key: string
      } & AccordionList)
    | ({
        _key: string
      } & BlogFrontpage)
    | ({
        _key: string
      } & BlogList)
    | ({
        _key: string
      } & Callout)
    | ({
        _key: string
      } & CustomHtml)
    | ({
        _key: string
      } & GalleryPets)
    | ({
        _key: string
      } & NavAbout)
    | ({
        _key: string
      } & NavExplore)
    | ({
        _key: string
      } & LogoList)
    | ({
        _key: string
      } & Sandpack)
    | ({
        _key: string
      } & TestimonialList)
    | ({
        _key: string
      } & TestimonialFeatured)
    | ({
        _key: string
      } & TextCta)
    | ({
        _key: string
      } & TextIntro)
    | ({
        _key: string
      } & TextRich)
  >
  metadata?: Metadata
}

export type Metadata = {
  _type: 'metadata'
  slug?: Slug
  title?: string
  description?: string
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  noIndex?: boolean
}

export type SanityImageCrop = {
  _type: 'sanity.imageCrop'
  top?: number
  bottom?: number
  left?: number
  right?: number
}

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot'
  x?: number
  y?: number
  height?: number
  width?: number
}

export type SanityImageAsset = {
  _id: string
  _type: 'sanity.imageAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  metadata?: SanityImageMetadata
  source?: SanityAssetSourceData
}

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData'
  name?: string
  id?: string
  url?: string
}

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata'
  location?: Geopoint
  dimensions?: SanityImageDimensions
  palette?: SanityImagePalette
  lqip?: string
  blurHash?: string
  hasAlpha?: boolean
  isOpaque?: boolean
}

export type LinkExternal = {
  _type: 'link.external'
  label?: string
  url?: string
}

export type Code = {
  _type: 'code'
  language?: string
  filename?: string
  code?: string
  highlightedLines?: Array<number>
}

export type MuxVideo = {
  _type: 'mux.video'
  asset?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'mux.videoAsset'
  }
}

export type MuxVideoAsset = {
  _type: 'mux.videoAsset'
  status?: string
  assetId?: string
  playbackId?: string
  filename?: string
  thumbTime?: number
  data?: MuxAssetData
}

export type MuxAssetData = {
  _type: 'mux.assetData'
  resolution_tier?: string
  upload_id?: string
  created_at?: string
  id?: string
  status?: string
  max_stored_resolution?: string
  passthrough?: string
  encoding_tier?: string
  master_access?: string
  aspect_ratio?: string
  duration?: number
  max_stored_frame_rate?: number
  mp4_support?: string
  max_resolution_tier?: string
  tracks?: Array<
    {
      _key: string
    } & MuxTrack
  >
  playback_ids?: Array<
    {
      _key: string
    } & MuxPlaybackId
  >
  static_renditions?: MuxStaticRenditions
}

export type MuxStaticRenditions = {
  _type: 'mux.staticRenditions'
  status?: string
  files?: Array<
    {
      _key: string
    } & MuxStaticRenditionFile
  >
}

export type MuxStaticRenditionFile = {
  _type: 'mux.staticRenditionFile'
  ext?: string
  name?: string
  width?: number
  bitrate?: number
  filesize?: number
  height?: number
}

export type MuxPlaybackId = {
  _type: 'mux.playbackId'
  id?: string
  policy?: string
}

export type MuxTrack = {
  _type: 'mux.track'
  id?: string
  type?: string
  max_width?: number
  max_frame_rate?: number
  duration?: number
  max_height?: number
}

export type IconPicker = {
  _type: 'iconPicker'
  provider?: string
  name?: string
  svg?: string
}

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityFileAsset
  | Geopoint
  | ProjectTag
  | Resource
  | ResourceCategory
  | ExperimentTag
  | CourseList
  | CourseCategory
  | BlogFrontpage
  | BlogList
  | BlogPostContent
  | SandpackFile
  | Sandpack
  | Cta
  | Tip
  | TextRich
  | TextIntro
  | TextCta
  | TestimonialList
  | TestimonialFeatured
  | LogoList
  | GalleryPets
  | CustomHtml
  | Callout
  | AccordionList
  | Testimonial
  | Redirect
  | NavExplore
  | NavAbout
  | Logo
  | Announcement
  | DropdownQuote
  | DropdownPromo
  | DropdownBlog
  | DropdownAbout
  | Settings
  | Menu
  | MenuMain
  | Uid
  | LinkSocial
  | LinkInternal
  | Experiment
  | Project
  | CourseChapter
  | PopQuiz
  | Course
  | Author
  | LinkList
  | BlogCategory
  | Slug
  | BlogArticle
  | Page
  | Metadata
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | LinkExternal
  | Code
  | MuxVideo
  | MuxVideoAsset
  | MuxAssetData
  | MuxStaticRenditions
  | MuxStaticRenditionFile
  | MuxPlaybackId
  | MuxTrack
  | IconPicker
export declare const internalGroqTypeReferenceTo: unique symbol
